spring:
  application:
    name: Civil Enforcement Online Application
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQL94Dialect
    database: postgresql
    show-sql: ${SHOW_SQL:true}
    hibernate:
      naming:
        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
    properties:
      hibernate:
        temp:
          use_jdbc_metadata_defaults: false
  datasource:
    url: ${SPRING_DATASOURCE_URL:jdbc:postgresql://localhost:5432/cet}
    username: ${SPRING_DATASOURCE_USERNAME:cet}
    password: ${SPRING_DATASOURCE_PASSWORD:cet}
    platform: postgresql
    tomcat:
      max-active: ${MAX_ACTIVE_DB_CONNECTIONS:50} # Maximum number of active connections that can be allocated from this pool at the same time.
      max-idle: ${MAX_IDLE_DB_CONNECTIONS:25}
      max-wait: ${MAX_WAIT_DB_CONNECTIONS:10000} # Number of ms to wait before throwing an exception if no connection is available.
      test-on-borrow: ${TEST_ON_BORROW_DB_CONNECTION:true} # Validate the connection before borrowing it from the pool.

  liquibase:
   enabled: false
   change-log: classpath:/db/changelog/db.changelog-master.yam

base-urls:
  idam-url: ${IDAM_API_URL:http://localhost:4501}
  idam-user-email: ${IDAM_USER_EMAIL:test-citizen@example.com}
  idam-user-role: ${IDAM_API_USER_ROLE:citizen}
  test-url: ${TEST_URL:http://localhost:8080}

#this need to be removed
info:
  app:
    environment: ${PACKAGES_ENVIRONMENT:local}
    project: ${PACKAGES_PROJECT:cet}
    name: ${PACKAGES_NAME:online-app}

azure:
  app_insights_key: ${APPINSIGHTS_INSTRUMENTATIONKEY:true}
  application-insights:
    instrumentation-key: ${APPINSIGHTS_INSTRUMENTATIONKEY:dummy}

idam:
  s2s-auth:
    url: ${S2S_URL:http://localhost:4502}
    microservice: ${TEST_S2S_SERVICE}
    totp_secret: ${TEST_S2S_SECRET}
